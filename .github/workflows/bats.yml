name: Test

on:
  workflow_dispatch:
  push: { tags: [ "*" ], branches: [ "main", "develop" ] }

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: true
      max-parallel: 1
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup CIDoer
        uses: i3ash/cidoer@main
      - name: Checkout code for tag
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Detect Branch or Tag
        shell: bash
        run: |
          source "${CIDOER_CORE_FILE:?}"
          do_print_dash_pair 'TAG' "$(git describe --tags `git rev-list --tags --max-count=1`)"
          if [[ "$GITHUB_REF" == refs/heads/* ]]; then
            echo "Branch detected"
            branch_name=${GITHUB_REF#refs/heads/}
            echo "Current branch: $branch_name"
            printf '%s\n' "CIDOER_GIT_REF=branch/$branch_name" >> $GITHUB_ENV
          elif [[ "$GITHUB_REF" == refs/tags/* ]]; then
            echo "Tag detected"
            tag_name=${GITHUB_REF#refs/tags/}
            echo "Current tag: $tag_name"
            printf '%s\n' "CIDOER_GIT_REF=tag/$tag_name" >> $GITHUB_ENV
          else
            echo "Unknown ref: $GITHUB_REF"
          fi

      - name: Test CIDoer Workflow (build & upload)
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          printf '%s\n' ${{ steps.checkout.outputs.ref }}
          printf '%s\n' "${CIDOER_CORE_FILE:?}"
          source "${CIDOER_CORE_FILE:?}"
          source tests/cidoer.sh
          do_workflow_job build
          do_workflow_job upload
      - name: Test CIDoer Workflow (deploy)
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          source "${CIDOER_CORE_FILE:?}"
          source tests/cidoer.sh
          do_workflow_job deploy
      - name: Test CIDoer Workflow (verify)
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          source "${CIDOER_CORE_FILE:?}"
          source tests/cidoer.sh
          do_workflow_job verify

      - name: Run Additional Tests
        working-directory: ${{ github.workspace }}/tests
        shell: bash
        run: |
          export HELLO=${{ env.HELLO }}
          bash additional.sh
      - name: Run Additional Tests on Docker Debian
        if: startsWith(runner.os, 'Linux')
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace/tests \
            debian:stable-slim bash additional.sh
      - name: Run Additional Tests on Docker Alpine
        if: startsWith(runner.os, 'Linux')
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace/tests \
            alpine sh -c "apk add --no-cache bash ncurses && bash additional.sh"

      - name: Setup Bats and Bats Libs
        id: setup-bats
        uses: bats-core/bats-action@3.0.0
        with:
          support-path: "${{ github.workspace }}/tests/bats-support"
          assert-path: "${{ github.workspace }}/tests/bats-assert"
          detik-path: "${{ github.workspace }}/tests/bats-detik"
          file-path: "${{ github.workspace }}/tests/bats-file"

      - name: Run Bats Tests
        working-directory: ${{ github.workspace }}/tests
        shell: bash
        run: bats ./
